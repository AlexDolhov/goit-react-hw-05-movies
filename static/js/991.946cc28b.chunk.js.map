{"version":3,"file":"static/js/991.946cc28b.chunk.js","mappings":"4TAEaA,EAAaC,EAAAA,GAAAA,KAAH,kZAgBVC,EAASD,EAAAA,GAAAA,OAAH,wPAeNE,EAAcF,EAAAA,GAAAA,MAAH,wL,SC3BXG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACE,UAACR,EAAD,CAAYK,SAbM,SAAAI,GAGlB,GAFAA,EAAEC,iBAEmB,KAAjBH,EAAMI,OAER,OAAOC,EAAAA,GAAAA,MAAY,oCAErBP,EAASE,GACTC,EAAS,IACTC,EAAEI,OAAOC,OACV,EAGC,WACE,SAACZ,EAAD,CAAQa,KAAK,SAAb,UACE,SAAC,MAAD,CAAUC,KAAK,UAIjB,SAACb,EAAD,CACEY,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,YAAY,eACZC,SA7BmB,SAAAZ,GACvBD,EAASC,EAAEa,cAAcC,MAAMC,cAChC,MA+BF,EAEDpB,EAAUqB,SAAW,CACnBpB,SAAUqB,IAAAA,KAAAA,Y,cCJZ,EAlCe,WAAO,IAAD,EACnB,GAAsCpB,EAAAA,EAAAA,UAAS,IAA/C,eAAOqB,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAK,UAAGuB,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAI1B,EAAO,CACT,IAAM2B,EAAc,mCAAG,gHAEIC,EAAAA,EAAAA,IAAiB5B,GAFrB,OAEb6B,EAFa,OAGbC,EAASD,EAASE,QAGxBV,EAAeS,GANI,gDAQnBzB,EAAAA,GAAAA,MAAY,iDARO,yDAAH,qDAWpBsB,GACD,CACF,GAAE,CAAC3B,IAMJ,OACE,iCACE,SAACH,EAAD,CAAWmC,WAAYhC,EAAOF,SANd,SAAAE,GAClBwB,EAA0B,KAAVxB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,KAKG,SAACiC,EAAA,EAAD,CAAYH,OAAQV,MAGzB,C","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid;\n  /* overflow: hidden; */\n  /* margin-left: auto;\n  margin-right: auto; */\n  margin-bottom: 12px;\n\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n    0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { GrSearch } from 'react-icons/gr';\nimport { toast } from 'react-toastify';\nimport { Button, SearchForm, SearchInput } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const inputQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const querySubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      // alert('Please enter valid search query.');\n      return toast.error('Please enter valid search query.');\n    }\n    onSubmit(query);\n    setQuery('');\n    e.target.reset();\n  };\n\n  return (\n    <SearchForm onSubmit={querySubmit}>\n      <Button type=\"submit\">\n        <GrSearch size=\"18\" />\n        {/* <Label>Search</Label> */}\n      </Button>\n\n      <SearchInput\n        type=\"text\"\n        autocomplete=\"off\"\n        autoFocus\n        name=\"query\"\n        placeholder=\"Search movie\"\n        onChange={inputQueryChange}\n      />\n    </SearchForm>\n  );\n};\n\nSearchBar.propType = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchQueryMovies } from 'api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [queryMovies, setQueryMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query) {\n      const getQueryMovies = async () => {\n        try {\n          const response = await fetchQueryMovies(query);\n          const movies = response.results;\n          // console.log('response', response);\n          // console.log('movies', movies);\n          setQueryMovies(movies);\n        } catch {\n          toast.error('Failed to load movies, please reload the page');\n        }\n      };\n      getQueryMovies();\n    }\n  }, [query]);\n\n  const querySubmit = query => {\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchBar queryValue={query} onSubmit={querySubmit} />\n      <MoviesList movies={queryMovies} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchForm","styled","Button","SearchInput","SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","target","reset","type","size","autocomplete","autoFocus","name","placeholder","onChange","currentTarget","value","toLowerCase","propType","PropTypes","queryMovies","setQueryMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getQueryMovies","fetchQueryMovies","response","movies","results","queryValue","MoviesList"],"sourceRoot":""}